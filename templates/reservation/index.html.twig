{% extends 'basefrontoffice.html.twig' %}

{% block title %}My Reservations{% endblock %}

{% block section8 %}
<div class="reservation-list-wrapper">
    <div class="reservation-list-header">
        <h1>My Reservations</h1>
        <a href="{{ path('app_reservation_new') }}" class="theme-btn">
            <i class="ti-plus"></i> New Reservation
        </a>
    </div>
    
    <div class="reservation-filters">
        <form id="search-form" method="get" action="{{ path(app.request.attributes.get('_route')) }}">
            <div class="search-box">
                <i class="ti-search search-icon"></i>
                <input 
                    type="text" 
                    id="reservation-search" 
                    name="search"
                    placeholder="Search by pickup or destination..."
                    value="{{ searchTerm }}"
                    autocomplete="off"
                >
            </div>
            
            <div class="filter-options">
                <select id="status-filter" name="status">
                    <option value="">All Statuses</option>
                    <option value="pending" {{ selectedStatus == 'pending' ? 'selected' : '' }}>Pending</option>
                    <option value="confirmed" {{ selectedStatus == 'confirmed' ? 'selected' : '' }}>Confirmed</option>
                    <option value="cancelled" {{ selectedStatus == 'cancelled' ? 'selected' : '' }}>Cancelled</option>
                </select>
            </div>
            
            {# Hidden submit button for accessibility #}
            <button type="submit" style="display: none">Search</button>
        </form>
    </div>
    
    {% if reservations|length > 0 %}
    <div class="reservation-grid">
        {% for reservation in reservations %}
        <div class="reservation-card" data-status="{{ reservation.status|lower }}">
            <div class="reservation-card-header status-{{ reservation.status|lower }}">
                <div class="status-badge">
                    <span class="status-indicator"></span>
                    <span class="status-text">{{ reservation.status }}</span>
                </div>
                <span class="reservation-date">{{ reservation.createdAt ? reservation.createdAt|date('M d, Y') : 'N/A' }}</span>
            </div>
            
            <div class="reservation-card-body">
                <div class="journey-info">
                    <div class="location pickup">
                        <div class="location-icon">
                            <i class="ti-location-pin"></i>
                        </div>
                        <span>{{ reservation.pickupAddress }}</span>
                    </div>
                    
                    <div class="direction-line">
                        <div class="direction-dot start"></div>
                        <div class="direction-dot end"></div>
                    </div>
                    
                    <div class="location destination">
                        <div class="location-icon">
                            <i class="ti-map-alt"></i>
                        </div>
                        <span>{{ reservation.destinationAddress }}</span>
                    </div>
                </div>
                
                <div class="reservation-details">
                    <div class="detail price">
                        <div class="detail-icon">
                            <i class="ti-money"></i>
                        </div>
                        <div class="detail-content">
                            <span class="detail-label">Price</span>
                            <span class="detail-value">{{ reservation.price ? reservation.price ~ ' TND' : 'N/A' }}</span>
                        </div>
                    </div>
                    
                    <div class="detail duration">
                        <div class="detail-icon">
                            <i class="ti-timer"></i>
                        </div>
                        <div class="detail-content">
                            <span class="detail-label">Duration</span>
                            <span class="detail-value">{{ reservation.estimatedDuration ?: 'N/A' }}</span>
                        </div>
                    </div>
                    
                    <div class="detail special-requests">
                        <div class="detail-icon">
                            <i class="ti-notepad"></i>
                        </div>
                        <div class="detail-content">
                            <span class="detail-label">Special Requests</span>
                            <span class="detail-value">
                                {% if reservation.specialRequests %}
                                    {{ reservation.specialRequests|length > 50 ? reservation.specialRequests|slice(0, 50) ~ '...' : reservation.specialRequests }}
                                {% else %}
                                    None
                                {% endif %}
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="reservation-card-footer">
                <a href="{{ path('app_reservation_show', {'id': reservation.id}) }}" class="btn-action view">
                    <i class="ti-eye"></i> View Details
                </a>
                <a href="{{ path('app_reservation_edit', {'id': reservation.id}) }}" class="btn-action edit">
                    <i class="ti-pencil"></i> Edit
                </a>
            </div>
        </div>
        {% endfor %}
    </div>
    
    {# Pagination #}
    <div class="pagination-wrapper">
        {{ knp_pagination_render(reservations, null, {}, {
            'align': 'center',
            'size': 'medium',
            'rounded': true
        }) }}
    </div>
    {% else %}
    <div class="no-reservations">
        <div class="empty-state-icon">
            <i class="ti-calendar"></i>
        </div>
        <h3>No Reservations Found</h3>
        <p>You haven't made any reservations yet. Create your first one now!</p>
        <a href="{{ path('app_reservation_new') }}" class="btn-create-first">
            <i class="ti-plus"></i> Create Your First Reservation
        </a>
    </div>
    {% endif %}
</div>
{% endblock %}


{% block css %}
    {{ parent() }}
    <style>
        :root {
            --primary-color: #4361ee;
            --primary-light: rgba(67, 97, 238, 0.1);
            --primary-dark: #3a56d4;
            --secondary-color: #6c63ff;
            --accent-color: #FF7E5F;
            --accent-gradient: linear-gradient(135deg, #FF7E5F, #FEB47B);
            --dark-color: #2A3A50;
            --light-color: #f9fafb;
            --grey-color: #718096;
            --grey-light: #e2e8f0;
            --pending-color: #F6AD55;
            --pending-light: rgba(246, 173, 85, 0.15);
            --confirmed-color: #48BB78;
            --confirmed-light: rgba(72, 187, 120, 0.15);
            --cancelled-color: #F56565;
            --cancelled-light: rgba(245, 101, 101, 0.15);
            --box-shadow: 0 10px 25px -5px rgba(0,0,0,0.1), 0 10px 10px -5px rgba(0,0,0,0.04);
            --card-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.05), 0 10px 10px -5px rgba(0, 0, 0, 0.01);
            --input-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
            --border-radius: 16px;
            --border-radius-sm: 8px;
            --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            --font-sans: 'Poppins', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
        }
        
        .reservation-list-wrapper {
            padding: 3rem 1.5rem;
            max-width: 1280px;
            margin: 0 auto;
            font-family: var(--font-sans);
            color: var(--dark-color);
        }
        
        .reservation-list-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2.5rem;
            padding-bottom: 1.25rem;
            border-bottom: 2px solid rgba(0,0,0,0.03);
        }
        
        .reservation-list-header h1 {
            font-size: 2.25rem;
            font-weight: 700;
            color: var(--dark-color);
            margin: 0;
            letter-spacing: -0.025em;
            position: relative;
        }
        
        .reservation-list-header h1::after {
            content: '';
            position: absolute;
            bottom: -0.5rem;
            left: 0;
            width: 3rem;
            height: 0.25rem;
            background: var(--accent-gradient);
            border-radius: 1rem;
        }
        
        .theme-btn {
            display: inline-flex;
        align-items: center;
        gap: 8px;
        background: linear-gradient(135deg, #4285F4, #34A853);
        color: white;
        text-decoration: none;
        font-size: 15px;
        font-weight: 500;
        transition: all 0.3s ease;
        padding: 12px 24px;
        border-radius: 50px;
        box-shadow: 0 5px 15px rgba(66, 133, 244, 0.3);
        }
        
        .theme-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(135deg, #FEB47B, #FF7E5F);
            opacity: 0;
            transition: var(--transition);
            z-index: -1;
            border-radius: 3rem;
        }
        
        .theme-btn:hover {
               transform: translateY(-3px);
        box-shadow: 0 8px 20px rgba(66, 133, 244, 0.4);
        }
        
        .theme-btn:hover::before {
            opacity: 1;
        }
        
        .theme-btn:active {
            transform: translateY(-1px);
            box-shadow: 0 4px 10px rgba(255, 126, 95, 0.4);
        }
        
        .theme-btn i {
            font-size: 1rem;
        }
        
        /* Filters */
        .reservation-filters {
            margin-bottom: 2.5rem;
        }
        
        #search-form {
            display: flex;
            gap: 1rem;
            width: 100%;
            flex-wrap: wrap;
        }
        
        .search-box {
            position: relative;
            flex: 1;
            min-width: 20rem;
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--input-shadow);
            transition: var(--transition);
        }
        
        .search-box:hover,
        .search-box:focus-within {
            box-shadow: 0 0 0 2px rgba(255, 126, 95, 0.2), var(--input-shadow);
        }
        
        .search-icon {
            position: absolute;
            left: 1.25rem;
            top: 50%;
            transform: translateY(-50%);
            color: var(--grey-color);
            transition: var(--transition);
        }
        
        .search-box:focus-within .search-icon {
            color: var(--accent-color);
        }
        
        #reservation-search {
            padding: 1rem 1.25rem 1rem 3rem;
            border: none;
            border-radius: var(--border-radius);
            width: 100%;
            font-size: 1rem;
            font-family: var(--font-sans);
            color: var(--dark-color);
            transition: var(--transition);
            background: transparent;
        }
        
        #reservation-search::placeholder {
            color: #A0AEC0;
        }
        
        #reservation-search:focus {
            outline: none;
        }
        
        .filter-options {
            display: flex;
            gap: 1rem;
        }
        
        #status-filter {
            padding: 1rem 3rem 1rem 1.25rem;
            border: none;
            border-radius: var(--border-radius);
            background-color: white;
            cursor: pointer;
            font-size: 1rem;
            min-width: 12rem;
            font-family: var(--font-sans);
            color: var(--dark-color);
            appearance: none;
            background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%23718096' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M6 9l6 6 6-6'/%3E%3C/svg%3E");
            background-repeat: no-repeat;
            background-position: right 1rem center;
            transition: var(--transition);
            box-shadow: var(--input-shadow);
        }
        
        #status-filter:hover,
        #status-filter:focus {
            box-shadow: 0 0 0 2px rgba(255, 126, 95, 0.2), var(--input-shadow);
            outline: none;
        }
        
        /* Reservation Grid */
        .reservation-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(24rem, 1fr));
            gap: 1.5rem;
        }
        
        .reservation-card {
            background-color: white;
            border-radius: var(--border-radius);
            box-shadow: var(--card-shadow);
            overflow: hidden;
            transition: var(--transition);
            border: 1px solid rgba(0,0,0,0.02);
            position: relative;
            isolation: isolate;
        }
        
        .reservation-card::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: var(--accent-gradient);
            opacity: 0;
            transition: var(--transition);
            z-index: -1;
        }
        
        .reservation-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.1);
            border-color: rgba(0,0,0,0);
        }
        
        .reservation-card:hover::before {
            opacity: 0.03;
        }
        
        /* Card Header */
        .reservation-card-header {
            padding: 1.25rem;
            display: flex;
            align-items: center;
            justify-content: space-between;
            position: relative;
            border-bottom: 1px solid rgba(0,0,0,0.06);
        }
        
        .status-badge {
            display: flex;
            align-items: center;
            padding: 0.5rem 1rem;
            border-radius: 2rem;
            font-size: 0.875rem;
            font-weight: 600;
        }
        
        .status-pending {
            background-color: var(--pending-light);
        }
        
        .status-confirmed {
            background-color: var(--confirmed-light);
        }
        
        .status-cancelled {
            background-color: var(--cancelled-light);
        }
        
        .status-indicator {
            display: inline-block;
            width: 0.625rem;
            height: 0.625rem;
            border-radius: 50%;
            margin-right: 0.5rem;
            position: relative;
        }
        
        .status-pending .status-indicator {
            background-color: var(--pending-color);
            box-shadow: 0 0 0 2px rgba(246, 173, 85, 0.2);
        }
        
        .status-confirmed .status-indicator {
            background-color: var(--confirmed-color);
            box-shadow: 0 0 0 2px rgba(72, 187, 120, 0.2);
        }
        
        .status-cancelled .status-indicator {
            background-color: var(--cancelled-color);
            box-shadow: 0 0 0 2px rgba(245, 101, 101, 0.2);
        }
        
        .status-pending .status-text {
            color: var(--pending-color);
        }
        
        .status-confirmed .status-text {
            color: var(--confirmed-color);
        }
        
        .status-cancelled .status-text {
            color: var(--cancelled-color);
        }
        
        .status-indicator::after {
            content: '';
            position: absolute;
            top: -4px;
            left: -4px;
            right: -4px;
            bottom: -4px;
            border-radius: 50%;
            z-index: 0;
            animation: pulse 2s infinite;
        }
        
        .status-pending .status-indicator::after {
            border: 1px solid var(--pending-color);
        }
        
        .status-confirmed .status-indicator::after {
            border: 1px solid var(--confirmed-color);
        }
        
        @keyframes pulse {
            0% { transform: scale(1); opacity: 1; }
            50% { transform: scale(1.5); opacity: 0; }
            100% { transform: scale(1); opacity: 0; }
        }
        
        .reservation-date {
            color: var(--grey-color);
            font-size: 0.875rem;
            font-weight: 500;
        }
        
        /* Card Body */
        .reservation-card-body {
            padding: 1.5rem;
        }
        
        .journey-info {
            position: relative;
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
            margin-bottom: 1.5rem;
            background: var(--light-color);
            padding: 1.25rem;
            border-radius: var(--border-radius-sm);
        }
        
        .location {
            display: flex;
            align-items: flex-start;
            gap: 1rem;
        }
        
        .location-icon {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 2.5rem;
            height: 2.5rem;
            background: white;
            border-radius: 50%;
            flex-shrink: 0;
            box-shadow: var(--input-shadow);
            position: relative;
            z-index: 1;
        }
        
        .location.pickup .location-icon {
            background: var(--accent-light);
            color: var(--accent-color);
        }
        
        .location.destination .location-icon {
            background: var(--primary-light);
            color: var(--primary-color);
        }
        
        .location-icon i {
            font-size: 1.125rem;
        }
        
        .location span {
            font-size: 0.9375rem;
            color: var(--dark-color);
            line-height: 1.5;
            padding-top: 0.25rem;
            font-weight: 500;
        }
        
        .direction-line {
            position: absolute;
            left: 2.5rem;
            top: 3.25rem;
            bottom: 3.25rem;
            width: 1px;
            background: linear-gradient(to bottom, var(--accent-color) 0%, var(--primary-color) 100%);
            z-index: 0;
        }
        
        .direction-dot {
            position: absolute;
            width: 0.5rem;
            height: 0.5rem;
            border-radius: 50%;
            left: -0.25rem;
        }
        
        .direction-dot.start {
            top: -0.25rem;
            background-color: var(--accent-color);
        }
        
        .direction-dot.end {
            bottom: -0.25rem;
            background-color: var(--primary-color);
        }
        
        .reservation-details {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 1rem;
        }
        
        .detail {
            display: flex;
            align-items: flex-start;
            gap: 0.75rem;
            padding: 1rem;
            background: var(--light-color);
            border-radius: var(--border-radius-sm);
            transition: var(--transition);
        }
        
        .detail:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.05);
        }
        
        .detail-icon {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 2rem;
            height: 2rem;
            border-radius: 50%;
            flex-shrink: 0;
            background: white;
            box-shadow: var(--input-shadow);
            color: var(--primary-color);
        }
        
        .detail.price .detail-icon {
            color: #805AD5;
        }
        
        .detail.duration .detail-icon {
            color: #DD6B20;
        }
        
        .detail.special-requests .detail-icon {
            color: #3182CE;
        }
        
        .detail-content {
            display: flex;
            flex-direction: column;
            gap: 0.25rem;
        }
        
        .detail-label {
            font-size: 0.75rem;
            color: var(--grey-color);
            font-weight: 500;
        }
        
        .detail-value {
            font-size: 0.9375rem;
            color: var(--dark-color);
            font-weight: 600;
            line-height: 1.4;
        }
        
        .special-requests {
            grid-column: span 2;
        }
        
        /* Card Footer */
        .reservation-card-footer {
            padding: 1.25rem;
            display: flex;
            justify-content: space-between;
            gap: 1rem;
            border-top: 1px solid rgba(0,0,0,0.06);
        }
        
        .btn-action {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            padding: 0.75rem 1.25rem;
            border-radius: 2rem;
            text-decoration: none;
            font-size: 0.9375rem;
            font-weight: 600;
            transition: var(--transition);
            flex: 1;
        }
        
        .btn-action.view {
            color: var(--dark-color);
            background-color: var(--light-color);
            border: 1px solid var(--grey-light);
        }
        
        .btn-action.edit {
            color: white;
            background: var(--primary-color);
            box-shadow: 0 4px 10px rgba(67, 97, 238, 0.3);
        }
        
        .btn-action:hover {
            transform: translateY(-2px);
        }
        
        .btn-action.view:hover {
            background-color: #f1f5f9;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.05);
        }
        
        .btn-action.edit:hover {
            background: var(--primary-dark);
            box-shadow: 0 6px 15px rgba(67, 97, 238, 0.4);
        }
        
        /* Empty State */
        .no-reservations {
            text-align: center;
            padding: 4rem 2rem;
            background-color: white;
            border-radius: var(--border-radius);
            box-shadow: var(--card-shadow);
            border: 1px solid rgba(0,0,0,0.03);
        }
        
        .empty-state-icon {
            width: 5rem;
            height: 5rem;
            background: var(--accent-gradient);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 2rem;
            color: white;
            font-size: 2rem;
            position: relative;
            box-shadow: 0 15px 30px rgba(255, 126, 95, 0.3);
        }
        
        .empty-state-icon::after {
            content: '';
            position: absolute;
            top: -8px;
            left: -8px;
            right: -8px;
            bottom: -8px;
            border-radius: 50%;
            border: 2px dashed var(--accent-color);
            opacity: 0.5;
            animation: rotate 10s linear infinite;
        }
        
        @keyframes rotate {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .no-reservations h3 {
            font-size: 1.5rem;
            color: var(--dark-color);
            margin-bottom: 1rem;
            font-weight: 700;
        }
        
        .no-reservations p {
            color: var(--grey-color);
            margin-bottom: 2rem;
            max-width: 32rem;
            margin-left: auto;
            margin-right: auto;
            line-height: 1.6;
            font-size: 1rem;
        }
        
        .btn-create-first {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            background: var(--accent-gradient);
            color: white;
            text-decoration: none;
            padding: 1rem 2rem;
            border-radius: 3rem;
            font-weight: 600;
            transition: var(--transition);
            box-shadow: 0 4px 15px rgba(255, 126, 95, 0.4);
        }
        
        .btn-create-first:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(255, 126, 95, 0.5);
        }
        
        /* Pagination */
        .pagination-wrapper {
            margin-top: 3rem;
            display: flex;
            justify-content: center;
        }
        
        .pagination {
            display: flex;
            gap: 0.5rem;
            list-style: none;
            padding: 0;
        }
        
        .pagination li {
            display: inline-block;
        }
        
        .pagination li a,
        .pagination li span {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 2.5rem;
            height: 2.5rem;
            border-radius: 50%;
            background-color: white;
            color: var(--dark-color);
            text-decoration: none;
            font-weight: 600;
            box-shadow: var(--input-shadow);
            transition: var(--transition);
        }
        
        .pagination li.active a,
        .pagination li.active span {
            background: var(--accent-gradient);
            color: white;
            box-shadow: 0 4px 10px rgba(255, 126, 95, 0.3);
        }
        
        .pagination li a:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        }
        
        .pagination li.active a:hover {
            background: linear-gradient(135deg, #FEB47B, #FF7E5F);
        }
        
        .pagination li.disabled span {
            color: #CBD5E0;
            box-shadow: none;
            background-color: #EDF2F7;
            cursor: not-allowed;
        }
        
        .pagination .page-item:first-child a,
        .pagination .page-item:last-child a {
            border-radius: 2rem;
            width: auto;
            padding: 0 1rem;
        }
        
        /* Accent classes for location icons */
        :root {
            --accent-light: rgba(255, 126, 95, 0.15);
        }
        
        /* Define fade-in animation */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        /* Apply animation to reservation cards */
        .reservation-card {
            animation: fadeIn 0.5s ease-out forwards;
        }
        
        /* Delay animation for each card */
        {% for i in 1..12 %}
        .reservation-card:nth-child({{ i }}) {
            animation-delay: {{ (i - 1) * 0.05 }}s;
        }
        {% endfor %}
        
        /* Search Animation */
        @keyframes searchPulse {
            0% { box-shadow: 0 0 0 0 rgba(255, 126, 95, 0.4); }
            70% { box-shadow: 0 0 0 10px rgba(255, 126, 95, 0); }
            100% { box-shadow: 0 0 0 0 rgba(255, 126, 95, 0); }
        }
        

        .search-box.searching .search-icon {
            color: var(--accent-color);
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const statusFilter = document.getElementById('status-filter');
            const searchInput = document.getElementById('reservation-search');
            const searchForm = document.getElementById('search-form');
            
            // Track if we're already submitting to prevent duplicate requests
            let isSubmitting = false;
            
            // Function to submit the form
            function submitForm() {
                if (isSubmitting) return;
                
                isSubmitting = true;
                
                // Reset to page 1 when filtering
                const pageInput = document.createElement('input');
                pageInput.type = 'hidden';
                pageInput.name = 'page';
                pageInput.value = '1';
                
                // Remove any existing page input
                const existingPageInput = searchForm.querySelector('input[name="page"]');
                if (existingPageInput) {
                    searchForm.removeChild(existingPageInput);
                }
                
                searchForm.appendChild(pageInput);
                searchForm.submit();
            }
            
            // Submit form immediately when status changes
            statusFilter.addEventListener('change', function() {
                submitForm();
            });
            
            // Submit form immediately when typing (no debounce)
            searchInput.addEventListener('input', function() {
                submitForm();
            });
            
            // Handle form submission completion
            searchForm.addEventListener('submit', function() {
                setTimeout(() => {
                    isSubmitting = false;
                }, 500);
            });
        });
    </script>
{% endblock %}