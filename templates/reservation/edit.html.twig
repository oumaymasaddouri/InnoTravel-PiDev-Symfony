{% extends 'basefrontoffice.html.twig' %}

{% block title %}Edit Reservation{% endblock %}

{% block section8 %}
<div class="reservation-form-wrapper">
    <div class="reservation-form-header">
        <h1>Edit Reservation</h1>
        <div class="header-actions">
            <a href="{{ path('app_reservation_index') }}" class="back-btn">
                <i class="ti-arrow-left"></i> Back to Reservations
            </a>
        </div>
    </div>
    
    <div class="reservation-form-container">
        <div class="reservation-form-icon">
            <i class="ti-pencil-alt"></i>
        </div>
        {{ include('reservation/_form.html.twig') }}
        
        <div class="delete-container">
            <hr class="divider">
            <h3>Delete this Reservation</h3>
            <p>This action cannot be undone. Please be certain.</p>
            {{ include('reservation/_delete_form.html.twig') }}
        </div>
    </div>
</div>
{% endblock %}

{% block css %}
    {{ parent() }}
    <style>
        :root {
            --primary-color: #35c759;
            --primary-dark: #2a9e48;
            --accent-color: #FF9F67;
            --accent-gradient: linear-gradient(135deg, #FF9F67, #ff7e33);
            --dark-color: #263A5B;
            --light-color: #f9f9f9;
            --grey-color: #555;
            --danger-color: #F44336;
            --danger-light: rgba(244, 67, 54, 0.15);
            --box-shadow: 0 5px 20px rgba(0,0,0,0.08);
            --card-shadow: 0 10px 30px rgba(0,0,0,0.08);
            --input-shadow: 0 2px 10px rgba(0,0,0,0.05);
            --border-radius: 15px;
            --border-radius-sm: 10px;
            --transition: all 0.3s ease;
            --font-sans: 'Poppins', sans-serif;
        }
        
        .reservation-form-wrapper {
            padding: 60px 20px;
            max-width: 800px;
            margin: 0 auto;
            font-family: var(--font-sans);
        }
        
        .reservation-form-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 40px;
            padding-bottom: 15px;
            border-bottom: 2px solid #f0f0f0;
        }
        
        .reservation-form-header h1 {
            font-size: 36px;
            color: var(--dark-color);
            margin: 0;
            font-weight: 700;
            position: relative;
        }
        
        .reservation-form-header h1:after {
            content: '';
            position: absolute;
            bottom: -5px;
            left: 0;
            width: 60px;
            height: 3px;
            background: var(--accent-gradient);
        }
        
        .header-actions {
            display: flex;
            gap: 12px;
        }
        
        .back-btn {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            color: var(--grey-color);
            text-decoration: none;
            font-size: 15px;
            font-weight: 500;
            transition: var(--transition);
            padding: 10px 20px;
            border-radius: 50px;
            background-color: #f8f8f8;
            box-shadow: var(--input-shadow);
        }
        
        .back-btn:hover {
            background-color: var(--dark-color);
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(38, 58, 91, 0.2);
        }
        
        .reservation-form-container {
            background-color: white;
            border-radius: var(--border-radius);
            box-shadow: var(--card-shadow);
            padding: 40px 30px;
            position: relative;
            margin-top: 40px;
            transition: var(--transition);
            overflow: visible;
        }
        
        .reservation-form-container:hover {
            box-shadow: 0 15px 40px rgba(0,0,0,0.12);
        }
        
        .reservation-form-icon {
            width: 80px;
            height: 80px;
            background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            position: absolute;
            top: -40px;
            left: 50%;
            transform: translateX(-50%);
            color: white;
            font-size: 30px;
            box-shadow: 0 5px 20px rgba(53, 199, 89, 0.4);
            transition: var(--transition);
        }
        
        .reservation-form-icon:hover {
            transform: translateX(-50%) scale(1.05);
        }
        
        /* Form Styling (assuming similar structure to new.html.twig) */
        form label {
            font-weight: 600;
            color: var(--dark-color);
            margin-bottom: 10px;
            display: block;
            font-size: 15px;
        }
        
        form input[type="text"],
        form input[type="email"],
        form input[type="number"],
        form select,
        form textarea {
            width: 100%;
            padding: 14px 18px;
            border: 1px solid #e0e0e0;
            border-radius: var(--border-radius-sm);
            margin-bottom: 24px;
            font-size: 15px;
            transition: var(--transition);
            background-color: var(--light-color);
        }
        
        #map {
            height: 400px;
            width: 100%;
            border-radius: 12px;
            box-shadow: var(--box-shadow);
            position: relative;
            margin: 20px 0;
        }
        
        form input:focus,
        form select:focus,
        form textarea:focus {
            outline: none;
            border-color: var(--accent-color);
            box-shadow: 0 0 0 4px rgba(255, 159, 103, 0.15);
            background-color: #fff;
        }
        
        form button[type="submit"] {
            background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
            color: white;
            border: none;
            padding: 14px 30px;
            font-size: 16px;
            border-radius: 50px;
            cursor: pointer;
            transition: var(--transition);
            display: inline-block;
            font-weight: 600;
            margin-top: 15px;
            box-shadow: 0 5px 15px rgba(53, 199, 89, 0.3);
        }
        
        form button[type="submit"]:hover {
            background: linear-gradient(135deg, var(--dark-color), #1a2a43);
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(38, 58, 91, 0.3);
        }
        
        /* Hide Location Toggle Buttons */
        .map-toggle {
            display: none !important;
        }
        
        .map-toggle .pickup-btn,
        .map-toggle .destination-btn {
            display: none !important;
        }
        
        /* Map Styling */
        .pickup-marker {
            filter: hue-rotate(120deg); /* Green */
        }
        
        .destination-marker {
            filter: hue-rotate(0deg); /* Red */
        }
        
        /* Delete Section */
        .divider {
            margin: 0px ;
            border: none;
            border-top: 2px solid #f0f0f0;
        }
        
        .delete-container {
            margin-top: 30px;
            padding: 25px;
            background-color: var(--danger-light);
            border-radius: var(--border-radius-sm);
            border-left: 4px solid var(--danger-color);
        }
        
        .delete-container h3 {
            color: var(--danger-color);
            font-size: 20px;
            margin-bottom: 12px;
            font-weight: 600;
        }
        
        .delete-container p {
            color: var(--grey-color);
            margin-bottom: 20px;
            font-size: 15px;
            line-height: 1.5;
        }
        
        /* Delete Button (aligned with new.html.twig's delete-btn) */
        form.delete-form button {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
            background: linear-gradient(to right, #F44336, #D32F2F);
            color: white;
            text-decoration: none;
            font-size: 15px;
            font-weight: 500;
            transition: var(--transition);
            padding: 12px 24px;
            border-radius: 50px;
            border: none;
            cursor: pointer;
            box-shadow: 0 4px 10px rgba(244, 67, 54, 0.3);
        }
        
        form.delete-form button:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(244, 67, 54, 0.4);
            background: linear-gradient(to right, #D32F2F, #B71C1C);
        }
        
        form.delete-form button:active {
            transform: translateY(1px);
            box-shadow: 0 2px 5px rgba(244, 67, 54, 0.4);
        }
        
        @media (max-width: 768px) {
            .reservation-form-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 20px;
            }
            
            .reservation-form-container {
                padding: 30px 20px;
            }
            
            .reservation-form-header h1 {
                font-size: 28px;
            }
            
            .reservation-form-icon {
                width: 60px;
                height: 60px;
                font-size: 24px;
                top: -30px;
            }
            
            form button[type="submit"],
            form.delete-form button {
                width: 100%;
                text-align: center;
            }
        }
    </style>
{% endblock %}

{% block js %}
    {{ parent() }}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin=""/>
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const mapContainer = document.getElementById('map');
            if (!mapContainer) {
                console.error('Map container not found!');
                return;
            }

            const map = L.map('map').setView([36.8065, 10.1815], 13); // Default center: Tunis

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '© OpenStreetMap contributors',
                maxZoom: 19,
            }).addTo(map);

            // Custom icons for pickup (green) and destination (red) using CDN
            const pickupIcon = L.icon({
                iconUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png',
                iconRetinaUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon-2x.png',
                shadowUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png',
                iconSize: [25, 41],
                iconAnchor: [12, 41],
                popupAnchor: [1, -34],
                shadowSize: [41, 41],
                className: 'pickup-marker'
            });

            const destinationIcon = L.icon({
                iconUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png',
                iconRetinaUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon-2x.png',
                shadowUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png',
                iconSize: [25, 41],
                iconAnchor: [12, 41],
                popupAnchor: [1, -34],
                shadowSize: [41, 41],
                className: 'destination-marker'
            });

            // Add default markers (assuming edit mode might have existing coordinates)
            let pickupMarker = L.marker([36.8065, 10.1815], { icon: pickupIcon }).addTo(map)
                .bindPopup('Pickup: Tunis<br>Lat: 36.8065, Lng: 10.1815')
                .openPopup();

            let destinationMarker = null;
            let polyline = null;

            // Populate form fields with default or existing values (adjust IDs based on form)
            document.getElementById('{{ form.pickupLatitude.vars.id }}').value = 36.8065;
            document.getElementById('{{ form.pickupLongitude.vars.id }}').value = 10.1815;

            // Reverse geocoding for default pickup
            reverseGeocode(36.8065, 10.1815, function(address) {
                if (address) {
                    document.getElementById('{{ form.pickup_address.vars.id }}').value = address;
                }
            });

            // Toggle functionality disabled since buttons are hidden
            // Map click event remains active for editing
            map.on('click', function (e) {
                const lat = e.latlng.lat.toFixed(6);
                const lng = e.latlng.lng.toFixed(6);

                // Assuming edit mode allows updating both pickup and destination
                if (!destinationMarker || Math.abs(pickupMarker.getLatLng().lat - lat) > 0.01) { // Simple heuristic to prioritize pickup
                    pickupMarker.setLatLng([lat, lng])
                        .bindPopup(`Pickup: Lat: ${lat}, Lng: ${lng}`)
                        .openPopup();

                    document.getElementById('{{ form.pickupLatitude.vars.id }}').value = lat;
                    document.getElementById('{{ form.pickupLongitude.vars.id }}').value = lng;

                    reverseGeocode(lat, lng, function(address) {
                        if (address) {
                            document.getElementById('{{ form.pickup_address.vars.id }}').value = address;
                        } else {
                            document.getElementById('{{ form.pickup_address.vars.id }}').value = 'Unknown location';
                        }
                    });
                } else {
                    if (destinationMarker) {
                        destinationMarker.setLatLng([lat, lng]);
                    } else {
                        destinationMarker = L.marker([lat, lng], { icon: destinationIcon }).addTo(map);
                    }
                    destinationMarker.bindPopup(`Destination: Lat: ${lat}, Lng: ${lng}`).openPopup();

                    document.getElementById('{{ form.destinationLatitude.vars.id }}').value = lat;
                    document.getElementById('{{ form.destinationLongitude.vars.id }}').value = lng;

                    reverseGeocode(lat, lng, function(address) {
                        if (address) {
                            document.getElementById('{{ form.destination_address.vars.id }}').value = address;
                        } else {
                            document.getElementById('{{ form.destination_address.vars.id }}').value = 'Unknown location';
                        }
                    });
                }

                if (pickupMarker && destinationMarker) {
                    const latlngs = [
                        pickupMarker.getLatLng(),
                        destinationMarker.getLatLng()
                    ];

                    if (polyline) {
                        map.removeLayer(polyline);
                    }

                    polyline = L.polyline(latlngs, { color: var(--dark-color), weight: 3 }).addTo(map);
                }
            });

            // Reverse geocoding function
            function reverseGeocode(lat, lng, callback) {
                const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&accept-language=en`;
                fetch(url, {
                    headers: {
                        'User-Agent': 'MyReservationApp/1.0 (contact@example.com)'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data && data.display_name) {
                        callback(data.display_name);
                    } else {
                        console.error('Reverse geocoding failed: No address found');
                        callback(null);
                    }
                })
                .catch(error => {
                    console.error('Error during reverse geocoding:', error);
                    callback(null);
                });
            }
        });
    </script>

    <style>
        /* Custom marker colors */
        .pickup-marker {
            filter: hue-rotate(120deg); /* Green */
        }

        .destination-marker {
            filter: hue-rotate(0deg); /* Red */
        }
    </style>
{% endblock %}