{% extends 'basebackoffice.html.twig' %}

{% block title %}Transport Management{% endblock %}

{% block content %}
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0">Transport Management</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Dashboard</a></li>
                    <li class="breadcrumb-item active">Transports</li>
                </ol>
            </div>
        </div>
    </div>
</div>

<section class="content">
    <div class="container-fluid">
        <!-- Stats Cards -->
        <div class="row mb-3">
            <div class="col-lg-3 col-md-6">
                <div class="card card-outline card-primary">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <span class="info-box-icon mr-3"><i class="fas fa-taxi"></i></span>
                            <div class="info-box-content">
                                <span class="info-box-text">Total Vehicles</span>
                                <span class="info-box-number">{{ totalVehicles }}</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6">
                <div class="card card-outline card-success">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <span class="info-box-icon mr-3"><i class="fas fa-check-circle"></i></span>
                            <div class="info-box-content">
                                <span class="info-box-text">Active</span>
                                <span class="info-box-number">{{ activeCount ?? '0' }}</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6">
                <div class="card card-outline card-danger">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <span class="info-box-icon mr-3"><i class="fas fa-times-circle"></i></span>
                            <div class="info-box-content">
                                <span class="info-box-text">Inactive</span>
                                <span class="info-box-number">{{ inactiveCount ?? '0' }}</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6">
                <div class="card card-outline card-info">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <span class="info-box-icon mr-3"><i class="fas fa-suitcase"></i></span>
                            <div class="info-box-content">
                                <span class="info-box-text">Avg. Luggage Capacity</span>
                                <span class="info-box-number">{{ avgLuggageCapacity ? avgLuggageCapacity|round(1) : '0' }}</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Transport List Card -->
        <div class="row">
            <div class="col-12">
                <div class="card card-outline card-primary">
                    <div class="card-header">
                        <h3 class="card-title">All Transports</h3>
                        <div class="card-tools">
                            <form method="get" action="{{ path('app_transport_admin_index') }}" class="form-inline">
                                <div class="input-group input-group-sm">
                                    <input type="text" name="search" class="form-control" placeholder="Search transports..." value="{{ app.request.query.get('search') }}">
                                    <div class="input-group-append">
                                        <button type="submit" class="btn btn-default">
                                            <i class="fas fa-search"></i>
                                        </button>
                                    </div>
                                </div>
                                <div class="ml-2">
                                    <a href="{{ path('app_transport_admin_new') }}" class="btn btn-primary btn-sm">
                                        <i class="fas fa-plus"></i> New Transport
                                    </a>
                                </div>
                            </form>
                        </div>
                    </div>

                    <div class="card-body table-responsive p-0">
                        <table class="table table-hover text-nowrap table-striped">
                            <thead>
                                <tr>
                                    <th style="width: 60px">ID</th>
                                    <th>Transport Info</th>
                                    <th>Vehicle Details</th>
                                    <th>License Plate</th>
                                    <th>Max Luggage</th>
                                    <th>Status</th>
                                    <th class="text-center">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                {% for transport in pagination %}
                                    <tr>
                                        <td>{{ transport.id }}</td>
                                        <td>
                                            <div class="user-block">
                                                <img class="img-circle elevation-1" src="{{ asset('backoffice/dist/img/avatar5.png') }}" alt="transport">
                                                <span class="username">
                                                    <a href="#">{{ transport.user.fullName ?? 'Transport #' ~ transport.id }}</a>
                                                </span>
                                                <span class="description">
                                                    <i class="fas fa-phone text-primary"></i> {{ transport.user.phoneNumber ?? 'N/A' }}
                                                </span>
                                            </div>
                                        </td>
                                        <td>
                                            <span class="badge bg-secondary text-sm">{{ transport.carModel }}</span>
                                            <span class="badge ml-1" style="background-color: {{ transport.carColor|lower }}; color: {{ transport.carColor|lower in ['white', 'yellow', 'beige'] ? '#000' : '#fff' }};">
                                                {{ transport.carColor }}
                                            </span>
                                        </td>
                                        <td>
                                            <span class="badge bg-dark">{{ transport.licensePlate }}</span>
                                        </td>
                                        <td>
                                            <div class="progress progress-sm">
                                                {% set maxLuggagePercentage = (transport.maxLuggage / 5) * 100 %}
                                                <div class="progress-bar bg-info" style="width: {{ maxLuggagePercentage }}%"></div>
                                            </div>
                                            <small>{{ transport.maxLuggage }} pieces</small>
                                        </td>
                                        <td>
                                            {% if transport.status is defined %}
                                                {% if transport.status == 'Active' %}
                                                    <span class="badge badge-success">Active</span>
                                                {% elseif transport.status == 'Inactive' %}
                                                    <span class="badge badge-danger">Inactive</span>
                                                {% endif %}
                                            {% else %}
                                                <span class="badge badge-danger">Error</span>
                                            {% endif %}
                                        </td>
                                        <td class="text-center">
                                            <div class="btn-group">
                                                <a href="{{ path('app_transport_admin_show', {'id': transport.id}) }}" class="btn btn-info btn-sm" title="View details">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                                <a href="{{ path('app_transport_admin_edit', {'id': transport.id}) }}" class="btn btn-warning btn-sm" title="Edit transport">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                                <button type="button" class="btn btn-danger btn-sm" title="Delete" data-toggle="modal" data-target="#delete-modal-{{ transport.id }}"
                                                    {% if (transport.isActive is defined and not transport.isActive) %}disabled{% endif %}>
                                                    <i class="fas fa-ban"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                {% else %}
                                    <tr>
                                        <td colspan="7" class="text-center py-4">
                                            <div class="empty-state">
                                                <i class="fas fa-car-crash fa-3x text-muted mb-2"></i>
                                                <p class="mt-2 text-muted">No transports have been added to the system yet.</p>
                                                <a href="{{ path('app_transport_admin_new') }}" class="btn btn-primary mt-2">
                                                    <i class="fas fa-plus mr-1"></i> Add First Transport
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                {% endfor %}
                            </tbody>
                        </table>
                    </div>

                    <div class="card-footer bg-light">
                        <ul class="pagination pagination-sm m-0 float-right">
                            {% if pagination.page > 1 %}
                                <li class="page-item">
                                    <a class="page-link" href="{{ path('app_transport_admin_index', app.request.query.all|merge({'page': pagination.page-1})) }}">«</a>
                                </li>
                            {% else %}
                                <li class="page-item disabled">
                                    <span class="page-link">«</span>
                                </li>
                            {% endif %}
                            
                            {% for i in 1..pagination.pageCount %}
                                <li class="page-item {% if i == pagination.page %}active{% endif %}">
                                    <a class="page-link" href="{{ path('app_transport_admin_index', app.request.query.all|merge({'page': i})) }}">{{ i }}</a>
                                </li>
                            {% endfor %}
                            
                            {% if pagination.page < pagination.pageCount %}
                                <li class="page-item">
                                    <a class="page-link" href="{{ path('app_transport_admin_index', app.request.query.all|merge({'page': pagination.page+1})) }}">»</a>
                                </li>
                            {% else %}
                                <li class="page-item disabled">
                                    <span class="page-link">»</span>
                                </li>
                            {% endif %}
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-12">
                <div class="callout callout-info">
                    <h5><i class="fas fa-info-circle mr-1"></i>Transport Analytics Dashboard</h5>
                    <p class="mb-0">View key metrics and analytics about your transport fleet below.</p>
                </div>
            </div>
        </div>

        <div class="row">
            <!-- Bar Chart: Top Vehicles by Luggage -->
            <div class="col-lg-8">
                <div class="card card-outline card-primary">
                    <div class="card-header">
                        <h5 class="card-title"><i class="fas fa-chart-bar mr-1 text-primary"></i>Top Vehicles by Luggage Capacity</h5>
                    </div>
                    <div class="card-body">
                        <canvas id="barChart" height="200"></canvas>
                    </div>
                </div>
            </div>
            
            <!-- Pie Chart: Car Color Distribution -->
            <div class="col-lg-4">
                <div class="card card-outline card-primary">
                    <div class="card-header">
                        <h5 class="card-title"><i class="fas fa-palette mr-1 text-primary"></i>Car Color Distribution</h5>
                    </div>
                    <div class="card-body">
                        <canvas id="pieChart" height="300"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Delete Modals -->
{% for transport in pagination %}
    <div class="modal fade" id="delete-modal-{{ transport.id }}">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-danger">
                    <h4 class="modal-title">Confirm Transport Deletion</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="d-flex align-items-center mb-3">
                        <i class="fas fa-exclamation-triangle text-warning fa-2x mr-3"></i>
                        <div>
                            <p class="mb-1">Are you sure you want to delete this transport record?</p>
                            <p class="text-danger mb-0"><small>This action cannot be undone.</small></p>
                        </div>
                    </div>
                    <div class="alert alert-warning">
                        <strong>Transport ID:</strong> #{{ transport.id }}<br>
                        <strong>Vehicle:</strong> {{ transport.carModel }} ({{ transport.carColor }})<br>
                        <strong>License Plate:</strong> {{ transport.licensePlate }}<br>
                        <strong>Status:</strong> {{ transport.status }}
                    </div>
                </div>
                <div class="modal-footer justify-content-between">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <form method="post" action="{{ path('app_transport_admin_delete', {'id': transport.id}) }}" style="display:inline-block;">
                        <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ transport.id) }}">
                        <button type="submit" class="btn btn-danger">
                            <i class="fas fa-trash mr-1"></i> Delete
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
{% endfor %}
{% endblock %}

{% block css %}
    {{ parent() }}
    <style>
        /* Base styling for light mode */
        body {
            font-family: 'Roboto', 'Segoe UI', sans-serif;
            background-color: #f5f7fa;
            font-size: 0.85rem;
        }

        /* Content header */
        .content-header {
            padding: 15px 0;
        }

        h1 {
            font-weight: 700;
            background: linear-gradient(45deg, #344767, #4b6cb7);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            font-size: 1.8rem;
            line-height: 1.2;
        }

        .breadcrumb-item a {
            color: #4b6cb7;
            transition: color 0.2s ease;
            font-size: 0.8rem;
        }

        .breadcrumb-item a:hover {
            color: #3b589e;
        }

        .breadcrumb-item.active {
            color: #6c757d;
            font-size: 0.8rem;
        }

        /* Card */
        .card {
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
            border: none;
            background: #ffffff;
        }

        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        }

        .card-outline.card-primary {
            border-top: 4px solid #4b6cb7;
        }

        .card-outline.card-success {
            border-top: 4px solid #28a745;
        }

        .card-outline.card-danger {
            border-top: 4px solid #dc3545;
        }

        .card-outline.card-info {
            border-top: 4px solid #17a2b8;
        }

        .card-header {
            padding: 0.75rem;
            background: #ffffff;
            border-bottom: 1px solid #e9ecef;
        }

        .card-title {
            color: #344767;
            font-weight: 600;
            font-size: 0.95rem;
        }

        .card-title i {
            color: #4b6cb7;
            font-size: 1rem;
        }

        .card-body {
            padding: 1rem;
        }

        .card-footer.bg-light {
            background: #f8f9fa;
            border-top: 1px solid #e9ecef;
        }

        /* Stats cards */
        .info-box-icon {
            font-size: 1.5rem;
            color: #344767;
        }

        .info-box-content {
            flex: 1;
        }

        .info-box-text {
            font-size: 0.8rem;
            font-weight: 500;
            color: #6c757d;
        }

        .info-box-number {
            font-size: 1.2rem;
            font-weight: 700;
            color: #344767;
        }

        /* Table */
        .table {
            margin-bottom: 0;
            color: #495057;
        }

        .table thead th {
            background-color: #f8f9fa;
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.75rem;
            padding: 0.5rem;
            border-bottom: 2px solid #dee2e6;
            color: #495057;
        }

        .table tbody td {
            padding: 0.5rem;
            vertical-align: middle;
            border-color: #e9ecef;
            font-size: 0.75rem;
        }

        .table-striped tbody tr:nth-of-type(odd) {
            background-color: #f9fafb;
        }

        .table-striped tbody tr:nth-of-type(even) {
            background-color: #ffffff;
        }

        .table-hover tbody tr:hover {
            background-color: #f1f5f9;
        }

        /* User block */
        .user-block img {
            width: 30px;
            height: 30px;
            object-fit: cover;
            border: 2px solid #ffffff;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .user-block .username {
            font-weight: 600;
            font-size: 0.9rem;
            color: #344767;
        }

        .user-block .username a {
            color: #344767;
        }

        .user-block .username a:hover {
            color: #4b6cb7;
        }

        .user-block .description {
            font-size: 0.8rem;
            color: #6c757d;
        }

        .user-block .description i {
            color: #4b6cb7;
        }

        /* Badges */
        .badge {
            padding: 0.3em 0.5em;
            font-weight: 500;
            border-radius: 5px;
            font-size: 0.65rem;
        }

        .badge.bg-secondary {
            background-color: #6c757d !important;
            color: #ffffff;
        }

        .badge.bg-dark {
            background-color: #343a40 !important;
            color: #ffffff;
        }

        .badge-success {
            background-color: #28a745 !important;
        }

        .badge-danger {
            background-color: #dc3545 !important;
        }

        /* Progress bar */
        .progress {
            height: 6px;
            border-radius: 3px;
            background-color: #e9ecef;
            margin: 4px 0;
        }

        .progress-bar {
            transition: width 0.3s ease;
        }

        .progress-bar.bg-info {
            background-color: #17a2b8 !important;
        }

        /* Search form */
        .input-group {
            width: 200px !important;
        }

        .form-control {
            border: 1px solid #e2e8f0;
            border-radius: 6px 0 0 6px;
            padding: 0.4rem 0.75rem;
            font-size: 0.8rem;
            background: #ffffff;
            color: #344767;
        }

        .form-control:focus {
            border-color: #4b6cb7;
            box-shadow: 0 0 0 0.2rem rgba(75, 108, 183, 0.25);
        }

        .input-group-append .btn {
            border-radius: 0 6px 6px 0;
            padding: 0.4rem 0.75rem;
        }

        /* Buttons */
        .btn {
            border-radius: 6px;
            padding: 0.5rem 0.75rem;
            font-weight: 500;
            transition: all 0.2s ease;
            font-size: 0.85rem;
        }

        .btn-sm {
            padding: 0.25rem 0.5rem;
            font-size: 0.75rem;
        }

        .btn-primary {
            background: #4b6cb7;
            border-color: #4b6cb7;
        }

        .btn-primary:hover {
            background: #3b589e;
            border-color: #3b589e;
        }

        .btn-info {
            background: #17a2b8;
            border-color: #17a2b8;
        }

        .btn-info:hover {
            background: #138496;
            border-color: #138496;
        }

        .btn-warning {
            background: #ffc107;
            border-color: #ffc107;
            color: #212529;
        }

        .btn-warning:hover {
            background: #e0a800;
            border-color: #e0a800;
        }

        .btn-danger {
            background: #dc3545;
            border-color: #dc3545;
        }

        .btn-danger:hover {
            background: #c82333;
            border-color: #c82333;
        }

        .btn-default {
            background: #ecf0f1;
            border-color: #dfe6e9;
            color: #7f8c8d;
        }

        .btn-default:hover {
            background: #dfe6e9;
            border-color: #ced4da;
            color: #636e72;
        }

        /* Pagination */
        .pagination .page-link {
            border-radius: 6px;
            margin: 0 2px;
            color: #4b6cb7;
            border: 1px solid #dee2e6;
            padding: 0.3rem 0.6rem;
            font-size: 0.75rem;
        }

        .pagination .page-item.active .page-link {
            background-color: #4b6cb7;
            border-color: #4b6cb7;
            color: #ffffff;
        }

        .pagination .page-item.disabled .page-link {
            color: #adb5bd;
        }

        /* Callout */
        .callout {
            border-radius: 8px;
            border-left: 4px solid #17a2b8;
            background: #ffffff;
            padding: 1rem;
        }

        .callout-info {
            border-left-color: #17a2b8;
        }

        .callout h5 {
            font-weight: 600;
            color: #344767;
            font-size: 0.95rem;
            margin-bottom: 0.5rem;
        }

        .callout h5 i {
            color: #17a2b8;
        }

        .callout p {
            font-size: 0.8rem;
            color: #6c757d;
        }

        /* Empty state */
        .empty-state {
            padding: 2rem;
            text-align: center;
        }

        .empty-state i {
            color: #6c757d;
        }

        .empty-state p {
            font-size: 0.9rem;
            color: #6c757d;
        }

        /* Modal */
        .modal-content {
            border-radius: 8px;
            box-shadow: 0 2px 12px rgba(0, 0, 0, 0.2);
            background: #ffffff;
            color: #344767;
        }

        .modal-header.bg-danger {
            background: #dc3545;
            border-top-left-radius: 8px;
            border-top-right-radius: 8px;
        }

        .modal-header .modal-title {
            font-size: 1rem;
            color: #ffffff;
        }

        .modal-header .close {
            color: #ffffff;
            opacity: 0.8;
        }

        .modal-header .close:hover {
            opacity: 1;
        }

        .modal-body {
            padding: 1rem;
            font-size: 0.9rem;
        }

        .modal-body .alert-warning {
            font-size: 0.8rem;
            padding: 0.75rem;
            background: #fff3cd;
            color: #856404;
        }

        .modal-body .text-danger {
            color: #dc3545;
        }

        .modal-body .text-warning {
            color: #ffc107;
        }

        .modal-footer {
            border-top: 1px solid #e9ecef;
            padding: 0.75rem;
        }

        .modal-footer .btn {
            padding: 0.5rem 0.75rem;
            font-size: 0.85rem;
        }

        /* Dark Mode Adjustments */
        body.dark-mode {
            background-color: #1a1a1a;
        }

        body.dark-mode h1 {
            background: linear-gradient(45deg, #6a89cc, #a3bffa);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        body.dark-mode .breadcrumb-item a {
            color: #6a89cc;
        }

        body.dark-mode .breadcrumb-item a:hover {
            color: #a3bffa;
        }

        body.dark-mode .breadcrumb-item.active {
            color: #a0a0a0;
        }

        body.dark-mode .card {
            background: #2a2a2a;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
        }

        body.dark-mode .card:hover {
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.5);
        }

        body.dark-mode .card-outline.card-primary {
            border-top-color: #6a89cc;
        }

        body.dark-mode .card-outline.card-success {
            border-top-color: #28a745;
        }

        body.dark-mode .card-outline.card-danger {
            border-top-color: #dc3545;
        }

        body.dark-mode .card-outline.card-info {
            border-top-color: #17a2b8;
        }

        body.dark-mode .card-header {
            background: #2a2a2a;
            border-bottom: 1px solid #3a3a3a;
        }

        body.dark-mode .card-title {
            color: #e0e0e0;
        }

        body.dark-mode .card-title i {
            color: #6a89cc;
        }

        body.dark-mode .card-footer.bg-light {
            background: #2a2a2a;
            border-top: 1px solid #3a3a3a;
        }

        body.dark-mode .info-box-icon {
            color: #e0e0e0;
        }

        body.dark-mode .info-box-text {
            color: #a0a0a0;
        }

        body.dark-mode .info-box-number {
            color: #e0e0e0;
        }

        body.dark-mode .table {
            color: #e0e0e0;
        }

        body.dark-mode .table thead th {
            background-color: #343434;
            border-bottom: 2px solid #4a4a4a;
            color: #e0e0e0;
        }

        body.dark-mode .table tbody td {
            border-color: #3a3a3a;
        }

        body.dark-mode .table-striped tbody tr:nth-of-type(odd) {
            background-color: #2a2a2a;
        }

        body.dark-mode .table-striped tbody tr:nth-of-type(even) {
            background-color: #343434;
        }

        body.dark-mode .table-hover tbody tr:hover {
            background-color: #3f3f3f;
        }

        body.dark-mode .user-block .username {
            color: #e0e0e0;
        }

        body.dark-mode .user-block .username a {
            color: #e0e0e0;
        }

        body.dark-mode .user-block .username a:hover {
            color: #6a89cc;
        }

        body.dark-mode .user-block .description {
            color: #a0a0a0;
        }

        body.dark-mode .user-block .description i {
            color: #6a89cc;
        }

        body.dark-mode .badge.bg-secondary {
            background-color: #5a6268 !important;
        }

        body.dark-mode .badge.bg-dark {
            background-color: #212529 !important;
        }

        body.dark-mode .progress {
            background-color: #3a3a3a;
        }

        body.dark-mode .form-control {
            background: #343434;
            border-color: #4a4a4a;
            color: #e0e0e0;
        }

        body.dark-mode .form-control:focus {
            border-color: #6a89cc;
            box-shadow: 0 0 0 0.2rem rgba(106, 137, 204, 0.25);
        }

        body.dark-mode .btn-primary {
            background: #6a89cc;
            border-color: #6a89cc;
        }

        body.dark-mode .btn-primary:hover {
            background: #a3bffa;
            border-color: #a3bffa;
        }

        body.dark-mode .btn-info {
            background: #17a2b8;
            border-color: #17a2b8;
        }

        body.dark-mode .btn-info:hover {
            background: #1ccad8;
            border-color: #1ccad8;
        }

        body.dark-mode .btn-warning {
            background: #ffc107;
            border-color: #ffc107;
        }

        body.dark-mode .btn-warning:hover {
            background: #ffca2c;
            border-color: #ffca2c;
        }

        body.dark-mode .btn-danger {
            background: #dc3545;
            border-color: #dc3545;
        }

        body.dark-mode .btn-danger:hover {
            background: #e4606d;
            border-color: #e4606d;
        }

        body.dark-mode .btn-default {
            background: #4a4a4a;
            border-color: #4a4a4a;
            color: #e0e0e0;
        }

        body.dark-mode .btn-default:hover {
            background: #5a5a5a;
            border-color: #5a5a5a;
        }

        body.dark-mode .pagination .page-link {
            color: #6a89cc;
            border-color: #4a4a4a;
        }

        body.dark-mode .pagination .page-item.active .page-link {
            background-color: #6a89cc;
            border-color: #6a89cc;
        }

        body.dark-mode .pagination .page-item.disabled .page-link {
            color: #6c757d;
        }

        body.dark-mode .callout {
            background: #2a2a2a;
            border-left-color: #17a2b8;
        }

        body.dark-mode .callout h5 {
            color: #e0e0e0;
        }

        body.dark-mode .callout p {
            color: #a0a0a0;
        }

        body.dark-mode .empty-state i {
            color: #a0a0a0;
        }

        body.dark-mode .empty-state p {
            color: #a0a0a0;
        }

        body.dark-mode .modal-content {
            background: #2a2a2a;
            color: #e0e0e0;
        }

        body.dark-mode .modal-header.bg-danger {
            background: #dc3545;
        }

        body.dark-mode .modal-body .alert-warning {
            background: #453508;
            color: #ffca2c;
        }

        body.dark-mode .modal-body .text-danger {
            color: #e4606d;
        }

        body.dark-mode .modal-body .text-warning {
            color: #ffca2c;
        }

        body.dark-mode .modal-footer {
            border-top: 1px solid #3a3a3a;
        }

        /* Responsive adjustments */
        @media (max-width: 767.98px) {
            body {
                font-size: 0.75rem;
            }

            h1 {
                font-size: 1.5rem;
            }

            .card-body {
                padding: 0.75rem;
            }

            .card-title {
                font-size: 0.9rem;
            }

            .info-box-icon {
                font-size: 1.2rem;
            }

            .info-box-text {
                font-size: 0.75rem;
            }

            .info-box-number {
                font-size: 1rem;
            }

            .input-group {
                width: 100% !important;
                margin-bottom: 0.5rem;
            }

            .form-control {
                padding: 0.3rem 0.6rem;
                font-size: 0.75rem;
            }

            .input-group-append .btn {
                padding: 0.3rem 0.6rem;
            }

            .card-tools .btn-sm {
                width: 100%;
            }

            .table thead th,
            .table tbody td {
                font-size: 0.65rem;
                padding: 0.4rem;
            }

            .badge {
                font-size: 0.6rem;
            }

            .user-block img {
                width: 25px;
                height: 25px;
            }

            .user-block .username {
                font-size: 0.8rem;
            }

            .user-block .description {
                font-size: 0.75rem;
            }

            .progress {
                height: 5px;
                margin: 3px 0;
            }

            .callout {
                padding: 0.75rem;
            }

            .callout h5 {
                font-size: 0.9rem;
            }

            .callout p {
                font-size: 0.75rem;
            }

            .modal-body {
                font-size: 0.8rem;
            }

            .modal-body .alert {
                font-size: 0.75rem;
                padding: 0.5rem;
            }

            .modal-footer .btn {
                padding: 0.4rem 0.6rem;
                font-size: 0.75rem;
            }
        }
    </style>
{% endblock %}

{% block js %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Color palette (same for both themes since they contrast well on both backgrounds)
            const colors = [
                'rgba(75, 108, 183, 0.8)',  // Blue (#4b6cb7)
                'rgba(40, 167, 69, 0.8)',   // Green (#28a745)
                'rgba(220, 53, 69, 0.8)',   // Red (#dc3545)
                'rgba(23, 162, 184, 0.8)',  // Cyan (#17a2b8)
                'rgba(255, 193, 7, 0.8)',   // Yellow (#ffc107)
                'rgba(111, 66, 193, 0.8)',  // Purple
                'rgba(253, 126, 20, 0.8)',  // Orange
                'rgba(108, 117, 125, 0.8)', // Gray (#6c757d)
                'rgba(236, 72, 153, 0.8)'   // Pink
            ];

            // Function to update chart options based on theme
            function getChartOptions(isDarkMode) {
                return {
                    gridColor: isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.05)',
                    tickColor: isDarkMode ? '#a0a0a0' : '#6c757d',
                    textColor: isDarkMode ? '#e0e0e0' : '#344767',
                    tooltipBg: isDarkMode ? 'rgba(255, 255, 255, 0.9)' : 'rgba(0, 0, 0, 0.85)',
                    tooltipTextColor: isDarkMode ? '#1a1a1a' : '#ffffff',
                    legendTextColor: isDarkMode ? '#e0e0e0' : '#344767'
                };
            }

            // Check initial theme
            let isDarkMode = document.body.classList.contains('dark-mode');
            const chartOptions = getChartOptions(isDarkMode);

            // Bar Chart: Top Vehicles by Luggage Capacity
            const barCtx = document.getElementById('barChart').getContext('2d');
            const barChart = new Chart(barCtx, {
                type: 'bar',
                data: {
                    labels: {{ topVehicles|map(v => v.getCarModel())|json_encode|raw }},
                    datasets: [{
                        label: 'Luggage Capacity (pieces)',
                        data: {{ topVehicles|map(v => v.getMaxLuggage())|json_encode|raw }},
                        backgroundColor: colors,
                        borderColor: colors.map(c => c.replace('0.8', '1')),
                        borderWidth: 1,
                        borderRadius: 6,
                        maxBarThickness: 40
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: { display: false },
                        tooltip: {
                            backgroundColor: chartOptions.tooltipBg,
                            bodyFont: { size: 12, family: 'Roboto' },
                            titleFont: { size: 14, family: 'Roboto', weight: '600' },
                            padding: 10,
                            cornerRadius: 6,
                            boxPadding: 4,
                            bodyColor: chartOptions.tooltipTextColor,
                            titleColor: chartOptions.tooltipTextColor
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            grid: {
                                color: chartOptions.gridColor,
                                drawBorder: false
                            },
                            ticks: {
                                font: { size: 10, family: 'Roboto' },
                                color: chartOptions.tickColor
                            },
                            title: {
                                display: true,
                                text: 'Capacity (pieces)',
                                font: { size: 12, family: 'Roboto', weight: '600' },
                                color: chartOptions.textColor
                            }
                        },
                        x: {
                            grid: { display: false },
                            ticks: {
                                font: { size: 10, family: 'Roboto' },
                                color: chartOptions.tickColor
                            }
                        }
                    },
                    animation: {
                        duration: 1000,
                        easing: 'easeOutQuart'
                    }
                }
            });

            // Doughnut Chart: Car Color Distribution
            const pieCtx = document.getElementById('pieChart').getContext('2d');
            const pieChart = new Chart(pieCtx, {
                type: 'doughnut',
                data: {
                    labels: {{ colorLabels|json_encode|raw }},
                    datasets: [{
                        data: {{ colorData|json_encode|raw }},
                        backgroundColor: colors,
                        borderColor: isDarkMode ? '#2a2a2a' : '#ffffff',
                        borderWidth: 2,
                        hoverOffset: 8
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: {
                                padding: 15,
                                font: { size: 10, family: 'Roboto' },
                                color: chartOptions.legendTextColor,
                                boxWidth: 10,
                                boxHeight: 10
                            }
                        },
                        tooltip: {
                            backgroundColor: chartOptions.tooltipBg,
                            bodyFont: { size: 12, family: 'Roboto' },
                            titleFont: { size: 14, family: 'Roboto', weight: '600' },
                            padding: 10,
                            cornerRadius: 6,
                            boxPadding: 4,
                            bodyColor: chartOptions.tooltipTextColor,
                            titleColor: chartOptions.tooltipTextColor,
                            callbacks: {
                                label: function(context) {
                                    const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                    const value = context.raw;
                                    const percentage = ((value / total) * 100).toFixed(1);
                                    return `${context.label}: ${value} (${percentage}%)`;
                                }
                            }
                        }
                    },
                    cutout: '60%',
                    animation: {
                        animateScale: true,
                        animateRotate: true,
                        duration: 1000,
                        easing: 'easeOutQuart'
                    }
                }
            });

            // Update charts on theme change
            document.getElementById('dark-mode-toggle').addEventListener('click', function() {
                isDarkMode = document.body.classList.contains('dark-mode');
                const newOptions = getChartOptions(isDarkMode);

                // Update bar chart
                barChart.options.scales.y.grid.color = newOptions.gridColor;
                barChart.options.scales.y.ticks.color = newOptions.tickColor;
                barChart.options.scales.y.title.color = newOptions.textColor;
                barChart.options.scales.x.ticks.color = newOptions.tickColor;
                barChart.options.plugins.tooltip.backgroundColor = newOptions.tooltipBg;
                barChart.options.plugins.tooltip.bodyColor = newOptions.tooltipTextColor;
                barChart.options.plugins.tooltip.titleColor = newOptions.tooltipTextColor;
                barChart.update();

                // Update pie chart
                pieChart.data.datasets[0].borderColor = isDarkMode ? '#2a2a2a' : '#ffffff';
                pieChart.options.plugins.legend.labels.color = newOptions.legendTextColor;
                pieChart.options.plugins.tooltip.backgroundColor = newOptions.tooltipBg;
                pieChart.options.plugins.tooltip.bodyColor = newOptions.tooltipTextColor;
                pieChart.options.plugins.tooltip.titleColor = newOptions.tooltipTextColor;
                pieChart.update();
            });
        });
    </script>
{% endblock %}